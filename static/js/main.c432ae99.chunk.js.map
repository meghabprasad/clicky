{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","src","image","onClick","handleClick","id","name","Wrapper","children","Title","App","state","friends","clickedId","message","count","removeFriend","_this","filter","friend","setState","clickedIdCopy","console","log","includes","concat","newClicked","push","newCount","shuffledFriends","sort","Math","random","_this2","this","components_Wrapper","components_Title","map","components_FriendCard","key","occupation","location","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"0iDAgBeA,MAbf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,SAElBL,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAMP,EAAMQ,YAAYR,EAAMS,GAAIT,EAAMU,OAAON,UAAU,UAAxE,wBCFSO,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,iBCG1BC,MAJf,SAAeb,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMY,kBCiEvBE,6MA7DbC,MAAQ,CACNC,UACAC,UAAW,GACXC,QAAS,GACTC,MAAO,KAGTC,aAAe,SAAAX,GAEb,IAAMO,EAAUK,EAAKN,MAAMC,QAAQM,OAAO,SAAAC,GAAM,OAAIA,EAAOd,KAAOA,IAElEY,EAAKG,SAAS,CAAER,eAGlBR,YAAc,SAACC,EAAIC,GAEf,IAAIe,EAAgBJ,EAAKN,MAAME,UAE/B,GADAS,QAAQC,IAAIF,GACRA,EAAcG,SAASnB,GAEzBY,EAAKG,SAAS,CAAEN,QAAO,uBAAAW,OAAyBnB,EAAzB,gBACvBW,EAAKG,SAAS,CAAEL,MAAO,IACvBM,EAAgB,GAChBJ,EAAKG,SAAS,CAAEP,UAAYQ,QAGzB,CACH,IAAMK,EAAaT,EAAKN,MAAME,UAC9Ba,EAAWC,KAAKtB,GAChBY,EAAKG,SAAS,CAAEP,UAAWa,IAC3BT,EAAKG,SAAS,CAAEN,QAAO,oBAAAW,OAAsBnB,KAC7C,IAAIsB,EAAWX,EAAKN,MAAMI,MAAQ,EAClCE,EAAKG,SAAS,CAACL,MAAOa,IACtB,IAAMC,EAAkBZ,EAAKN,MAAMC,QAAQkB,KAAK,kBAAMC,KAAKC,SAAW,KACtEf,EAAKG,SAAS,CAAES,8FAKb,IAAAI,EAAAC,KACP,OACErC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,qBACAvC,EAAAC,EAAAC,cAAA,UAAKmC,KAAKvB,MAAMG,SAChBjB,EAAAC,EAAAC,cAAA,UAAKmC,KAAKvB,MAAMI,OACfmB,KAAKvB,MAAMC,QAAQyB,IAAI,SAAAlB,GAAM,OAC5BtB,EAAAC,EAAAC,cAACuC,EAAD,CACElC,YAAa6B,EAAK7B,YAClBC,GAAIc,EAAOd,GACXkC,IAAKpB,EAAOd,GACZC,KAAMa,EAAOb,KACbJ,MAAOiB,EAAOjB,MACdsC,WAAYrB,EAAOqB,WACnBC,SAAUtB,EAAOsB,qBAvDXC,mBCDlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c432ae99.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img src={props.image} />\n      </div>\n      <span onClick={() => props.handleClick(props.id, props.name)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedId: [],\n    message: \"\",\n    count: 0\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  handleClick = (id, name) => {\n    //check to see if they have clicked this card. \n      let clickedIdCopy = this.state.clickedId;\n      console.log(clickedIdCopy);\n      if (clickedIdCopy.includes(id)){\n        //If they have clicked, send message\n        this.setState({ message: `You already clicked ${name}. You lose`});\n        this.setState({ count: 0 })\n        clickedIdCopy = [];\n        this.setState({ clickedId : clickedIdCopy });\n      } \n        //else add the id of the card to the clickedId array\n      else {\n        const newClicked = this.state.clickedId;\n        newClicked.push(id);\n        this.setState({ clickedId: newClicked});\n        this.setState({ message: `You just clicked ${name}`});\n        let newCount = this.state.count + 1;\n        this.setState({count: newCount});\n        const shuffledFriends = this.state.friends.sort(() => Math.random() - 0.5);\n        this.setState({ shuffledFriends });\n      }\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        <h1>{this.state.message}</h1>\n        <h1>{this.state.count}</h1>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleClick={this.handleClick}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  } \n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}